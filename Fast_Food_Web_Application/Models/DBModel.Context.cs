//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fast_Food_Web_Application.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class DBModels : DbContext
    {
        public DBModels()
            : base("name=DBModels")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<admin_1> admin_1 { get; set; }
        public DbSet<admin_staff> admin_staff { get; set; }
        public DbSet<Customer_payment> Customer_payment { get; set; }
        public DbSet<customer> customers { get; set; }
        public DbSet<FeedBack> FeedBacks { get; set; }
        public DbSet<payment> payments { get; set; }
        public DbSet<staff> staffs { get; set; }
        public DbSet<tbl_invoice> tbl_invoice { get; set; }
        public DbSet<tbl_order> tbl_order { get; set; }
        public DbSet<tbl_product> tbl_product { get; set; }
        public DbSet<User_Login> User_Login { get; set; }
        public DbSet<User_Registration> User_Registration { get; set; }
        public DbSet<User_RegLogin> User_RegLogin { get; set; }
    
        public virtual int spInsert_staff(string userName, string email, string password, string staff_Type, string gender, string staff_Image)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var staff_TypeParameter = staff_Type != null ?
                new ObjectParameter("Staff_Type", staff_Type) :
                new ObjectParameter("Staff_Type", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var staff_ImageParameter = staff_Image != null ?
                new ObjectParameter("staff_Image", staff_Image) :
                new ObjectParameter("staff_Image", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsert_staff", userNameParameter, emailParameter, passwordParameter, staff_TypeParameter, genderParameter, staff_ImageParameter);
        }
    
        public virtual int spInsertIntoCutomerPayment(string fullName, string email, string address, string city, Nullable<long> zip, string nameOnCard, Nullable<long> craditCardNumber, string eXPMonth, Nullable<int> cVV, Nullable<long> eXPYear)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("fullName", fullName) :
                new ObjectParameter("fullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("Zip", zip) :
                new ObjectParameter("Zip", typeof(long));
    
            var nameOnCardParameter = nameOnCard != null ?
                new ObjectParameter("NameOnCard", nameOnCard) :
                new ObjectParameter("NameOnCard", typeof(string));
    
            var craditCardNumberParameter = craditCardNumber.HasValue ?
                new ObjectParameter("CraditCardNumber", craditCardNumber) :
                new ObjectParameter("CraditCardNumber", typeof(long));
    
            var eXPMonthParameter = eXPMonth != null ?
                new ObjectParameter("EXPMonth", eXPMonth) :
                new ObjectParameter("EXPMonth", typeof(string));
    
            var cVVParameter = cVV.HasValue ?
                new ObjectParameter("CVV", cVV) :
                new ObjectParameter("CVV", typeof(int));
    
            var eXPYearParameter = eXPYear.HasValue ?
                new ObjectParameter("EXPYear", eXPYear) :
                new ObjectParameter("EXPYear", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertIntoCutomerPayment", fullNameParameter, emailParameter, addressParameter, cityParameter, zipParameter, nameOnCardParameter, craditCardNumberParameter, eXPMonthParameter, cVVParameter, eXPYearParameter);
        }
    
        public virtual int spInsertIntoDeals(string pro_FoodName, string pro_FoodDescription, Nullable<long> pro_FoodPrice, string pro_FoodImage, string pro_dealsName)
        {
            var pro_FoodNameParameter = pro_FoodName != null ?
                new ObjectParameter("pro_FoodName", pro_FoodName) :
                new ObjectParameter("pro_FoodName", typeof(string));
    
            var pro_FoodDescriptionParameter = pro_FoodDescription != null ?
                new ObjectParameter("pro_FoodDescription", pro_FoodDescription) :
                new ObjectParameter("pro_FoodDescription", typeof(string));
    
            var pro_FoodPriceParameter = pro_FoodPrice.HasValue ?
                new ObjectParameter("pro_FoodPrice", pro_FoodPrice) :
                new ObjectParameter("pro_FoodPrice", typeof(long));
    
            var pro_FoodImageParameter = pro_FoodImage != null ?
                new ObjectParameter("pro_FoodImage", pro_FoodImage) :
                new ObjectParameter("pro_FoodImage", typeof(string));
    
            var pro_dealsNameParameter = pro_dealsName != null ?
                new ObjectParameter("pro_dealsName", pro_dealsName) :
                new ObjectParameter("pro_dealsName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertIntoDeals", pro_FoodNameParameter, pro_FoodDescriptionParameter, pro_FoodPriceParameter, pro_FoodImageParameter, pro_dealsNameParameter);
        }
    
        public virtual int spInsertRegLogin(string userName, string email, string password, string reg_Type, string gender)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var reg_TypeParameter = reg_Type != null ?
                new ObjectParameter("Reg_Type", reg_Type) :
                new ObjectParameter("Reg_Type", typeof(string));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertRegLogin", userNameParameter, emailParameter, passwordParameter, reg_TypeParameter, genderParameter);
        }
    }
}
